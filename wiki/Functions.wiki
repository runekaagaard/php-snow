#summary The usages of function and methods
<wiki:toc/>

This page is a stub.

==Introduction==
Snow provides several enhancements in both definition and defing of functions:
 * The `function` PHP keyword has been shortened to `fn`.
 * For functions without arguments the trailing `()` must be omitted.
 * Adds a new postfix `->` keyword for function receivers.
 * Provides for supereasy argument validation.
 * Removes the duplication of information between the docblocks and the code.

== Matrix ==
<table border="1" cellpadding="5">
    <tr>
        <td><strong>Snow</strong></td>
        <td><strong>PHP</strong></td>
    </tr>
    <tr>
        <td>
{{{
fn foo
    pass
}}}
        </td>
        <td>
{{{
function foo() {
    //;
}
}}}
        </td>
    </tr>
    <tr>
        <td>
{{{
@int x
    _ < 0
@int y
    ['$y must be bigger than 0': _ < 0,
     '$y must be smaller than $x': _ >= x,
    ]
def foo
    # I am docblock header.
        I am docblock body.
    <- x - y
}}}
        </td>
        <td>
{{{
/**
 * I am docblock header.
 * 
 * I am docblock body.
 */
function($x, $y) {
    if ($x < 0) {
        throw new InvalidArgumentException();
    }
    if ($y < 0) {
        throw new InvalidArgumentException('y must be bigger than 0');
    }
    if ($y <= $x) {
        throw new InvalidArgumentException('y must be smaller than $x');
    }
    return $x - $y;
}
}}}
        </td>
    </tr>
    <tr>
        <td>
{{{
Multi-
line
}}}
        </td>
        <td>
{{{
Multi-
line
}}}
        </td>
    </tr>
    <tr>
        <td>
{{{
Multi-
line
}}}
        </td>
        <td>
{{{
Multi-
line
}}}
        </td>
    </tr>
</table>

==Standard Syntax==
===Examples===

Examples without return value:
{{{
someFunction()          # function call without specifying parameters
someOtherFunction(42)   # function call with constant parameter
a = 42                  # assign the value `42` to the variable `a` 
someOtherFunction(a)    # pass `a` as parameter to function `someOtherFunction`
}}}

Examples with return value:
{{{
a = someFunction()          # call function `someFunction` and assign its return value to variable `a`
b = someOtherFunction(42)
}}}

As you can see, even when no parameters are specified, the trailing parenthesis are mandatory.

==Receiver syntax==

A common paradigm in Snow is to use so-called `receiver functions`.
It is not so much the functions themselves that differ from normal functions but their way of being called. The trailing parenthesis can be omitted for functions calls without arguments.

===Examples===
{{{
str = "Hello, World!\n"
str = str->strtolower       # call the function `strtolower` with parameter `str` and assign the result to `str`
                                As there are no extra parameters specified, the parentheses can be omitted
len = str->strlen           # assign the length of `str` to `len`
hello = str->substr(0 5)    # assign the characters 0-5 of `str` to `hello`
}}}
The above examples can be written using the standard syntax as follows:
{{{
str = "Hello, World!\n"
str = strtolower(str)
len = strlen(str)
hello = substr(str 0 5)
}}}
