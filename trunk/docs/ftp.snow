# Class handling FTP operations.
    Wrapper on top of FTP protocol that enables file/directory listing,
    upload/download, etc.
@str pro host
    # The ftp host to connect to.
    !%->empty
@int pro port=21
    # The port to connect to.
    0 < % < 65536
@int pro timeout=30
    # Connect timeout, bail out if exceeded. 0 means wait forever.
    0 <= %
class Ftp
    con int
        OPT_TRANS_ASCII = FTP_ASCII
        OPT_TRANS_BINARY = FTP_BINARY
        OPT_TRANS_AUTO = 3
    pro
        arr
            ascii_types = ["text" "csv"]
            binary_types = ["jpg" "jpeg" "gif" "psd"]
        int default_transmode = ::OPT_TRANS_ASCII
        res conn

    # Constructor.
        Tries to connect to server or throws an exception.
    .conn = ftp_connect(host port timeout) or throw Exception(
        "Couldn't connect to host '{host}'")

    @str user
    @str pass
    fn login: <- ftp_login(.conn user pass)

    @str local
    @str remote
    @int trans_mode = ::OPT_TRANS_AUTO
    fn put
        trans_mode = get_trans_mode(local) when trans_mode == ::OPT_TRANS_AUTO
        ftp_put(.conn local remote trans_mode) or throw Exception(
            "Couldn't get file '{remote}'")

    @str local
    @str remote
    @int trans_mode = ::OPT_TRANS_AUTO
    fn get
        trans_mode = get_trans_mode(local) when trans_mode == ::OPT_TRANS_AUTO
        ftp_get(.conn local remote trans_mode) or throw Exception(
            "Couldn't get file '{remote}'")

    # Checks whether a file exists on the remote side.
    @str file
        # The filename to check for.
        !%->empty
    fn file_exists
        <- .conn->ftp_nlist(file->dirname)->in_array(file->basename)

    # Determine transfermode to use.
    @str file
    fn get_trans_mode
        for ext in .ascii_types
            <- ::OPT_TRANS_ASCII when file->substr(-ext->strlen) == ext
        for ext in .binary_types
            <- ::OPT_TRANS_BINARY when file->substr(-ext->strlen) == ext
        <- default_transmode

    fn close: <- ftp_close(.conn)

try
    ftp = Ftp("my.host")
    ftp.login("user" "pass")
    ftp.get("/remote/file" "/local/file")
catch(Exception e)
    e->var_dump
